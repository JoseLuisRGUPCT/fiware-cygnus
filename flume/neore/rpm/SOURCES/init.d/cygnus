#!/bin/bash
# Copyright 2014 Telefonica InvestigaciÃ³n y Desarrollo, S.A.U
# 
# This file is part of fiware-connectors (FI-WARE project).
# 
# cosmos-injector is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General
# Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
# later version.
# cosmos-injector is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.
# 
# You should have received a copy of the GNU Affero General Public License along with fiware-connectors. If not, see
# http://www.gnu.org/licenses/.
# 
# For those usages not covered by the GNU Affero General Public License please contact with iot_support at tid dot es
#
# cygnus         Start/Stop cygnus
#
# chkconfig: 2345 99 60
# description: cygnus

# Load some fancy functions for init.d
. /etc/rc.d/init.d/functions

PARAM=$1

COMPONENT_NAME=cygnus
PREFIX=/usr
CYGNUS_DIR=${PREFIX}/cygnus
FLUME_EXECUTABLE=${CYGNUS_DIR}/bin/cygnus-flume-ng
CYGNUS_USER=cygnus

cygnus_start()
{
    local result=0

    if [[ ! -x ${FLUME_EXECUTABLE} ]]; then
        printf "%s\n" "Fail - ${FLUME_EXECUTABLE} not exists or is not executable."
        exit 1
    fi

    for instance in $(ls ${CYGNUS_DIR}/conf/cygnus_instance_*.conf)
    do
        local NAME
        NAME=${instance%.conf}
        NAME=${NAME#*cygnus_instance_}

        . ${instance}
        
        CYGNUS_PID_FILE="/var/run/cygnus/cygnus_${NAME}.pid"
        
        printf "%s" "Starting Cygnus ${NAME}...  "

        status -p ${CYGNUS_PID_FILE} ${FLUME_EXECUTABLE} &> /dev/null 

        if [[ ${?} -eq 0 ]]; then
            printf "%s\n" " Already running, skipping $(success)"
            continue
        fi

        CYGNUS_COMMAND="${FLUME_EXECUTABLE} agent -p ${ADMIN_PORT} --conf ${CONFIG_FOLDER} -f ${CONFIG_FILE} -n ${AGENT_NAME}  -Dflume.log.file=${LOGFILE_NAME} &>> /var/log/cygnus/${LOGFILE_NAME} & echo \$! > ${CYGNUS_PID_FILE}"
        su ${CYGNUS_USER} -c "${CYGNUS_COMMAND}"
        sleep 2 # wait some time to know if flume is still alive
        PID=$(cat ${CYGNUS_PID_FILE})        
        FLUME_PID=$(ps -ef | grep -v "grep" | grep "${PID:-not_found}")
        if [[ -z ${FLUME_PID} ]]; then
            printf "%s\n" "$(failure)"
            result=$((${result}+1))
            rm ${CYGNUS_PID_FILE}
        else
            chown ${CYGNUS_USER}:${CYGNUS_USER} ${CYGNUS_PID_FILE}
            printf "%s\n" "$(success)"
        fi
    done
    return ${result}
}

cygnus_stop()
{
    local result=0

    if [[ $(ls -l /var/run/cygnus/cygnus_*.pid 2> /dev/null | wc -l) -eq 0 ]]; then
        printf "%s\n" "There aren't any instance of Cygnus running $(success)"
        return 0
    fi

    for run_instance in $(ls /var/run/cygnus/cygnus_*.pid)
    do

        local NAME
        NAME=${run_instance%.pid}
        NAME=${NAME#*cygnus_}

        printf "%-50s" "Stopping Cygnus ${NAME}..."
        PID=$(cat ${run_instance})        
        kill -HUP ${PID} &> /dev/null
        sleep 2
        FLUME_PID=$(ps -ef | grep -v "grep" | grep "${PID:-not_found}")
        if [[ -z ${FLUME_PID} ]]; then
            rm -f ${run_instance}
            printf "%s\n" "$(success)"
        else
            printf "%s\n" "$(failure)"
            result=$((${result}+1))
            rm -f ${run_instance}
        fi
    done
    return ${result}
}

cygnus_status()
{
    local result=0

    if [[ $(ls -l /var/run/cygnus/cygnus_*.pid 2> /dev/null | wc -l) -eq 0 ]]; then
        printf "%s\n" "There aren't any instance of Cygnus running"
        exit 1
    fi

    for run_instance in $(ls /var/run/cygnus/cygnus_*.pid)
    do

        local NAME
        NAME=${run_instance%.pid}
        NAME=${NAME#*cygnus_}

        printf "%s\n" "Cygnus ${NAME} status..."
        status -p ${run_instance} ${FLUME_EXECUTABLE}
        result=$((${result}+${?}))

    done
    return ${result}
}


case ${PARAM} in

    'start')
        cygnus_start
        ;;

    'stop')
        cygnus_stop
        ;;

    'restart')
        cygnus_stop
        cygnus_start
        ;;

    'status')
        cygnus_status
        ;;

esac
