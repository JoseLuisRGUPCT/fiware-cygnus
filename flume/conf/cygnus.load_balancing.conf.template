# Copyright 2014 Telefónica Investigación y Desarrollo, S.A.U
# 
# This file is part of fiware-connectors (FI-WARE project).
# 
# fiware-connectors is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General
# Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
# later version.
# fiware-connectors is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.
# 
# You should have received a copy of the GNU Affero General Public License along with fiware-connectors. If not, see
# http://www.gnu.org/licenses/.
# 
# For those usages not covered by the GNU Affero General Public License please contact with Francisco Romero
# frb@tid.es

#=============================================
# To be put in APACHE_FLUME_HOME/conf/cygnus.conf
#
# This template is addressed for those deployments where multiple sinks of the same type are needed in order to improve
# the performance. In order to do that, in addition to multiple sinks definition, a load balancing configuration is
# required. The load balancing strategy can be configured as round robin or random, as stated in the official
# documentation (http://flume.apache.org/FlumeUserGuide.html#load-balancing-sink-processor). Please observe the channel
# is shared among all the balanced sinks.

#=============================================
# The next tree fields set the sources, sinks and channels used by Cygnus. You could use different names than the
# ones suggested below, but in that case make sure you keep coherence in properties names along the configuration file.
# Regarding sinks, you can use multiple types at the same time; the only requirement is to provide a channel for each
# one of them (this example shows how to configure 2 instances of the HDFS sink type).
cygnusagent.sources = http-source
cygnusagent.sinks = hdfs-sink1 hdfs-sink2
cygnusagent.channels = hdfs-channel

#=============================================
# This sink group example is addressed for a round robin-based load balancing between hdfs-sink1 and hdfs-sink2 (which
# are already declared sinks, see above). Feel free to add as many HDFS sinks as you may need.
cygnusagent.sinkgroups = hdfs-group
cygnusagent.sinkgroups.hdfs-group.sinks = hdfs-sink1 hdfs-sink2
cygnusagent.sinkgroups.hdfs-group.processor.type = load_balance
cygnusagent.sinkgroups.hdfs-group.processor.backoff = true
cygnusagent.sinkgroups.hdfs-group.processor.selector = round_robin

#=============================================
# source configuration
# channel name where to write the notification events
cygnusagent.sources.http-source.channels = hdfs-channel mysql-channel ckan-channel
# source class, must not be changed
cygnusagent.sources.http-source.type = org.apache.flume.source.http.HTTPSource
# listening port the Flume source will use for receiving incoming notifications
cygnusagent.sources.http-source.port = 5050
# Flume handler that will parse the notifications, must not be changed
cygnusagent.sources.http-source.handler = es.tid.fiware.fiwareconnectors.cygnus.handlers.OrionRestHandler
# URL target
cygnusagent.sources.http-source.handler.notification_target = /notify
# Default organization (organization semantic depend on the persistence sink)
cygnusagent.sources.http-source.handler.default_organization = org42
# Number of channel re-injection retries before a Flume event is definitely discarded
cygnusagent.sources.http-source.handler.event_ttl = 10
# Management interface port (FIXME: temporal location for this parameter)
cygnusagent.sources.http-source.handler.management_port = 8081
# Source interceptors, do not change
cygnusagent.sources.http-source.interceptors = ts-interceptor
# Interceptor type, do not change
cygnusagent.sources.http-source.interceptors.ts-interceptor.type = timestamp

# ============================================
# OrionHDFSSink configuration (sink 1)
# channel name from where to read notification events
cygnusagent.sinks.hdfs-sink1.channel = hdfs-channel
# sink class, must not be changed
cygnusagent.sinks.hdfs-sink1.type = es.tid.fiware.fiwareconnectors.cygnus.sinks.OrionHDFSSink
# Comma-separated list of FQDN/IP address regarding the Cosmos Namenode endpoints
cygnusagent.sinks.hdfs-sink1.cosmos_host = x1.y1.z1.w1,x2.y2.z2.w2
# port of the Cosmos service listening for persistence operations; 14000 for httpfs, 50070 for webhdfs and free choice for inifinty
cygnusagent.sinks.hdfs-sink1.cosmos_port = 14000
# default username allowed to write in HDFS
cygnusagent.sinks.hdfs-sink1.cosmos_default_username = default
# default password for the default username
cygnusagent.sinks.hdfs-sink1.cosmos_default_password = xxxxxxxxxxxxx
# HDFS backend type (webhdfs, httpfs or infinity)
cygnusagent.sinks.hdfs-sink1.hdfs_api = httpfs
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.hdfs-sink1.attr_persistence = column
# prefix for the database and table names, empty if no prefix is desired
cygnusagent.sinks.hdfs-sink1.naming_prefix =
# Hive FQDN/IP address of the Hive server
cygnusagent.sinks.hdfs-sink1.hive_host = x.y.z.w
# Hive port for Hive external table provisioning
cygnusagent.sinks.hdfs-sink1.hive_port = 10000

# ============================================
# OrionHDFSSink configuration (sink 2, which is a twin of sink 1 except for the name)
# channel name from where to read notification events
cygnusagent.sinks.hdfs-sink2.channel = hdfs-channel
# sink class, must not be changed
cygnusagent.sinks.hdfs-sink2.type = es.tid.fiware.fiwareconnectors.cygnus.sinks.OrionHDFSSink
# Comma-separated list of FQDN/IP address regarding the Cosmos Namenode endpoints
cygnusagent.sinks.hdfs-sink2.cosmos_host = x1.y1.z1.w1,x2.y2.z2.w2
# port of the Cosmos service listening for persistence operations; 14000 for httpfs, 50070 for webhdfs and free choice for inifinty
cygnusagent.sinks.hdfs-sink2.cosmos_port = 14000
# default username allowed to write in HDFS
cygnusagent.sinks.hdfs-sink2.cosmos_default_username = default
# default password for the default username
cygnusagent.sinks.hdfs-sink2.cosmos_default_password = xxxxxxxxxxxxx
# HDFS backend type (webhdfs, httpfs or infinity)
cygnusagent.sinks.hdfs-sink2.hdfs_api = httpfs
# how the attributes are stored, either per row either per column (row, column)
cygnusagent.sinks.hdfs-sink2.attr_persistence = column
# prefix for the database and table names, empty if no prefix is desired
cygnusagent.sinks.hdfs-sink2.naming_prefix =
# Hive FQDN/IP address of the Hive server
cygnusagent.sinks.hdfs-sink2.hive_host = x.y.z.w
# Hive port for Hive external table provisioning
cygnusagent.sinks.hdfs-sink2.hive_port = 10000

#=============================================
# hdfs-channel configuration (shared between the 2 sinks)
# channel type (must not be changed)
cygnusagent.channels.hdfs-channel.type = memory
# capacity of the channel
cygnusagent.channels.hdfs-channel.capacity = 1000
# amount of bytes that can be sent per transaction
cygnusagent.channels.hdfs-channel.transactionCapacity = 100